Interview Questions:
React:
1. How to render react components differently on diff. OS (let say need to show hide)
2. React DOM Manipulation?
------------------------------------------
3. . what will output if we call multiple ReactDOM.render(), we call another render inside setTimeout in a render method?
Ans -
class App extends React.Component {
  render() {
    return (<div>Morning</div>)
  }
}
class Demo extends React.Component {
  render() {
    return (<div>Evening</div>)
  }
}
ReactDOM.render(<App/>, document.getElementById('app'));
ReactDOM.render(<Demo/>, document.getElementById('app')); // final output is Evening
class App extends React.Component {
  render() {
    return (<div>Morning</div>)
    return (<div>Evening</div>)
  }
}
ReactDOM.render(<App/>, document.getElementById('app')); // Morning
-----------------------------------------------------------------
4. what will be the output if we use multiple return in one render? 
Ans-
class App extends React.Component {
  render() {
    return (<div>Morning</div>)
    return (<div>Evening</div>)
  }
}
ReactDOM.render(<App/>, document.getElementById('app')); // Morning

--------------------
5. How to authenticate in React?
Ans - 
You can use Json Web token or OKTA to add authentication as below. 
import { useState, useEffect } from 'react';

export const useAuth = auth => {
  const [authenticated, setAuthenticated] = useState(null);
  const [user, setUser] = useState(null);

  useEffect(() => {
    auth.isAuthenticated().then(isAuthenticated => {
      if (isAuthenticated !== authenticated) {
        setAuthenticated(isAuthenticated);
      }
    });
  });

  useEffect(() => {
    if (authenticated) {
      auth.getUser().then(setUser);
    } else {
      setUser(null);
    }
  }, [authenticated]);

  return [authenticated, user];
}
---------------------
6. React 16.8 converting class components to functional components?
Ans-
For react 15.x versions, To convert we need to use some libraries like "recompose".
Also if we want to use HOC we need to use recompose method like -. 

For 26.x we can use useState().
------------------
7. What is hook in react? 
Ans-
Hooks are functions that let you “hook into” React state and lifecycle features from function components.
Hooks don’t work inside classes — they let you use React without classes. 
=)) Why to use hooks
We don’t recommend rewriting your existing components overnight 
but you can start using Hooks in the new ones if you’d like.
=)) 
Can we create our own hook?
You can also create your own Hooks to reuse stateful behavior between different components
1. useState() 
2. useEffect() 
3. useContext() 
4. 
--------------------
8. Passing data from child to parent?
9. How to navigate back to previous page without using browser back button?
10. If you see some errors in your jsx inner tag how can you get that?
11. How can we use jquery in react?
12. What is pure component? When to use them?
13. What is react ref used for? Drawback of using react refs?
---------------------------------------------------------------------
14.what is controlled and uncontrolled components in react?
Ans -
Difference b/w controlled and un-controlled component
controlled
1. Instant field validation
2. conditionally disabling submit/any button
3. In forcing input format is possible
4. It can have several input for one piece of data.
5. it can have dynamic data.
un-controlled can have above features.
---------------------------------------------------------------------
15. React Main life cycle methods?
Ans -
1. Mounting: At this phase, A component is created and inserted to the DOM.
2. updating: A react component get changes in props and update the changed props in the DOM.
3. unMounting: Final Phase. remove events after dom is completed or page is closed.
4. Error Handling: Handing errors inside react component hirarchy.(Multiple childream).
5. Which life cycle methods are depricated and which new are indroduced?
